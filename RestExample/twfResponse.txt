using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;

namespace onService
{
    public class twfResponse
    {
        DAL _dal = new DAL();
        public int CompanyId;
        public const int Hours = -7;
        private readonly List<string> _allCodesToGetGroups = new List<string>();
        public readonly CookieContainer CookieJar = new CookieContainer();
        private readonly StringBuilder _details = new StringBuilder();
        //private void SetLogin()
        //{
        //    bool canLogin = false;
        //    var inputs = _wbTawaf.Document.GetElementsByTagName("input");
        //    foreach (HtmlElement input in inputs)
        //    {
        //        Debug.WriteLine(input.OuterHtml);
        //        if (input.OuterHtml.Contains("gwt-TextBox"))
        //        {
        //            input.InnerText = _userName;
        //            continue;
        //        }
        //        else if (input.OuterHtml.Contains("gwt-PasswordTextBox"))
        //        {
        //            input.InnerText = _password;
        //            canLogin = true;
        //            continue;
        //        }
        //    }

        //    if (canLogin)
        //    {
        //        var btns = _wbTawaf.Document.GetElementsByTagName("button");
        //        foreach (HtmlElement btn in btns)
        //        {

        //            if (btn.InnerHtml.Contains("Sign In"))
        //            {
        //                btn.InvokeMember("click");
        //                break;
        //            }

        //        }
        //    }
        //}


        private string _userName;
        public TawafConfig Config;
        private StringBuilder tawafReport = new StringBuilder();

        public twfResponse()
        {
            var dal = new DAL();
            Config = dal.GetTawafConfig(null);
        }

        public string ThirtyTwoDigitCode { get; set; }
        public string JavaLangCode { get; set; }
        public string JavaUtilCode { get; set; }
        public string RepMofaWrapper { get; set; }
        public string GroupWrapper { get; set; }
        public string BoxVer { get; set; }
        public string CodeToGetGroups { get; set; }
        public DateTime LastThirtyTwoDigitDate { get; set; }

        public void RenewTawafConfig(int skip)
        {
            var dal = new DAL();
            Config = dal.GetTawafConfig(skip);
        }

        private Dictionary<string, string> DownloadHtml(string url, List<string> regexList, string localFile = "")
        {
            var output = new Dictionary<string, string>();
            if (string.IsNullOrEmpty(localFile))
            {
                var httpWebRequest = (HttpWebRequest) WebRequest.Create(url);
                httpWebRequest.Method = "GET";
                httpWebRequest.Headers.Add("Accept-Encoding", "gzip");
                httpWebRequest.CookieContainer = CookieJar;
                var httpWebReponse = (HttpWebResponse) httpWebRequest.GetResponse();

                var stream = httpWebReponse.GetResponseStream();
                if (stream != null)
                {
                    var reader = new StreamReader(stream);
                    output.Add("html", reader.ReadToEnd());
                }
            }
            else
            {
                output.Add("html", File.ReadAllText(localFile));
            }
            foreach (var regexItem in regexList)
            {
                var r = new Regex(regexItem, RegexOptions.IgnoreCase);
                var matches = (from object aMatch in r.Matches(output["html"]) select aMatch.ToString()).ToList();
                output.Add(regexItem, string.Join(",", matches));
            }
            return output;
        }

        private Dictionary<string, string> DownloadHtml(string url, string postData, string contentType,
            Dictionary<string, string> headers, List<string> regexList)
        {
            var output = new Dictionary<string, string>();
            var httpWebRequest = (HttpWebRequest) WebRequest.Create(url);

            httpWebRequest.Method = "POST";
            httpWebRequest.CookieContainer = CookieJar;
            httpWebRequest.ContentType = contentType;
            httpWebRequest.Host = "tawaf.com.sa";
            httpWebRequest.UserAgent =
                "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.103 Safari/537.36";
            foreach (var header in headers)
            {
                httpWebRequest.Headers[header.Key] = header.Value;
            }

            httpWebRequest.Headers.Add("DNT", "1");
            httpWebRequest.Headers.Add("Origin", "http://tawaf.com.sa");
            httpWebRequest.Headers.Add("Accept-Language", "en-US,en;q=0.8,ar;q=0.6");
            //_httpWebRequest.Headers.Add("Content-Type: text/x-gwt-rpc; charset=UTF-8");

            httpWebRequest.Headers.Add("Cache-Control", "max-age=0");
            httpWebRequest.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
            httpWebRequest.ServicePoint.Expect100Continue = false;
            httpWebRequest.Expect = "";
            httpWebRequest.KeepAlive = true;

//Referer: http://tawaf.com.sa/tawaf39/index.html?locale=en


            var data = Encoding.ASCII.GetBytes(postData);
            httpWebRequest.ContentLength = data.Length;

            using (var streamv = httpWebRequest.GetRequestStream())
            {
                streamv.Write(data, 0, data.Length);
            }


            var httpWebReponse = (HttpWebResponse) httpWebRequest.GetResponse();

            var stream = httpWebReponse.GetResponseStream();
            if (stream != null)
            {
                var reader = new StreamReader(stream);
                output.Add("html", reader.ReadToEnd());
            }

            if (output["html"].Contains("ServiceException"))
            {
                output.Add("Error", output["html"]);
                return output;
            }
            foreach (var regexItem in regexList)
            {
                var matches = Regex.Matches(output["html"], regexItem);
                List<string> allMatches = new List<string>();
                if (matches.Count > 0)
                {
                    foreach (Match mtch in matches)
                    {
                        if (mtch.Groups.Count > 0)
                        {
                            allMatches.Add(mtch.Groups[1].ToString());
                        }
                        else
                        {
                            allMatches.Add(mtch.ToString());
                        }
                    }
                }

                output.Add(regexItem, string.Join(",", allMatches));
            }
            return output;
        }

        private void GetThirtyTwoDigitCode()
        {
            //you fill find everything in V_Mut_Groups and Rep_Mofa
            ThirtyTwoDigitCode = Config.ThirtyTwoCode;
            _details.AppendFormat(
                "32 Digits Code used {0} you can get this code by loggin in and capture the URL redirected to",
                ThirtyTwoDigitCode);

            //Update: from POST http://tawaf.com.sa/tawaf39/etawaf/V_Mut_Groups
            //ThirtyTwoDigitCode is X-GWT-Permutation: 22275F9252691BFD1AA61DC5AA926A7A
            //7|0|6|http://tawaf.com.sa/tawaf39/etawaf/|D1CB9D8F52C8B3AB005C5009E8790482|com.gwt.umra.client.async.V_Mut_Groups_Service|getTableData|com.gwt.umra.shared.wrapper.V_Mut_Groups_Wrapper/1672639591|from V_Mut_Groups where 1=1 AND grp_status=10 AND uo_code = 157  AND uo_code=157 AND uo_branch_code=0 AND ea_code=21587 AND grp_arch=0|1|2|3|4|1|5|5|0|0|0|0|0|0|20|6|0|0|0|0|0|

            //URL like this http://tawaf.com.sa/tawaf39/etawaf/98CA115956753048FA084DF6C03F0F9E.cache.html will have the 32Digit Code
            //Error area - coming here means error
            //Coming here means error in getting group codes in this case flush the serialized object
            //LastThirtyTwoDigitDate = DateTime.Now.AddYears(-1);
            //CodeToGetGroups = string.Empty;
            //Serialize(this);

            // return "Error:" + "Could not get available groups using any of the codes " + string.Join(",", _allCodesToGetGroups);

            //var ThirtyTwoDigitRegEx = Utility.GetIniValue("32DigitsRegEx", "'[0-9A-Z]{32}'");
            //var thirtyTwoDigitsInput = new List<string> { ThirtyTwoDigitRegEx };
            //var result = DownloadHtml("http://tawaf.com.sa/tawaf39/etawaf/etawaf.nocache.js",
            //    thirtyTwoDigitsInput);
            //var ThirtyTwoDigitLocation = Utility.GetIniValue("32DigitsLocation", 11);

            //ThirtyTwoDigitCode = result[ThirtyTwoDigitRegEx].Split(',')[ThirtyTwoDigitLocation].Replace("'", "");

            //var ThirtyTwoKey = Regex.Match(result["html"], @",[\w]{2,5}='" + ThirtyTwoDigitCode);
            //tawafReport.AppendFormat("<br/> 32 Digits RegEx {0} At {1} Found {2} from http://tawaf.com.sa/tawaf39/etawaf/etawaf.nocache.js", ThirtyTwoDigitRegEx, ThirtyTwoDigitLocation, ThirtyTwoKey.ToString());


            //_wbTawaf.ScriptErrorsSuppressed = true;
            //_wbTawaf.DocumentCompleted += wbTawaf_DocumentCompleted;
            //_wbTawaf.Navigate("http://tawaf.com.sa/tawaf39/index.html?locale=en");
        }

        //void wbTawaf_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
        //{

        //    var url = e.Url.ToString();
        //    if (url.Contains("javascript")) return;

        //    if (Regex.Match(url, "http://tawaf.com.sa/tawaf39/etawaf/[a-zA-Z0-9]{32}.cache.html").Success)
        //    {
        //        ThirtyTwoDigitCode = Regex.Match(url, "[a-zA-Z0-9]{32}").ToString();
        //        //SetLogin();

        //        GetGwtParameters();
        //        CodeToGetGroups = string.Empty;

        //        var lastError = string.Empty;
        //        if (!string.IsNullOrEmpty(CodeToGetGroups)) //If there is a good code to get groups do not try all the codes
        //        {
        //            _allCodesToGetGroups = new List<string> { CodeToGetGroups };
        //        }
        //        var additionalHardcodedCode = string.Empty;
        //        if (File.Exists("TawafCodeToGetGroups.txt"))
        //            additionalHardcodedCode = File.ReadAllText("TawafCodeToGetGroups.txt");
        //        else
        //            File.WriteAllText("TawafCodeToGetGroups.txt", string.Empty);
        //        _allCodesToGetGroups.Add(additionalHardcodedCode);
        //        _allCodesToGetGroups.Add("FFE9D62A437D7AF609485BAA2E3C6222");
        //        _allCodesToGetGroups.Reverse();
        //        foreach (var codetotry in _allCodesToGetGroups)
        //        {
        //            if (string.IsNullOrEmpty(codetotry)) continue;
        //            var loginCode = Regex.Match(_userName,@"\d+").ToString();
        //            var postDataGetGroups = "6|0|6|http://www.tawaf.com.sa/tawaf38/etawaf/|" + codetotry +
        //                                    "|com.gwt.umra.client.async.V_Mut_Groups_Service|getTableData|" +
        //                                    GroupWrapper +
        //                                    "|from V_Mut_Groups where 1=1 AND grp_status=10 AND uo_branch_code=0 AND ea_code = " +
        //                                    loginCode + " AND grp_arch=0|1|2|3|4|1|5|5|0|0|0|0|0|0|100|6|0|0|0|0|";

        //            //6|0|6|http://tawaf.com.sa/tawaf39/etawaf/|FFE9D62A437D7AF609485BAA2E3C6222|com.gwt.umra.client.async.V_Mut_Groups_Service|getTableData|com.gwt.umra.shared.wrapper.V_Mut_Groups_Wrapper/2453305918|from V_Mut_Groups where 1=1 AND grp_status=10 AND uo_code = 226  AND uo_code=226 AND uo_branch_code=0 AND ea_code=21401 AND grp_arch=0|1|2|3|4|1|5|5|0|0|0|0|0|0|10|6|0|0|0|0|
        //            var getGroupsInput = new List<string> { @",[0-9]{6}," };
        //            var inputDictionaryGetGroups = new Dictionary<string, string>
        //        {
        //            {"X-GWT-Module-Base", "http://tawaf.com.sa/tawaf39/etawaf/"},
        //            {"X-GWT-Permutation", ThirtyTwoDigitCode}
        //        };
        //            var getGroupResults = DownloadHtml("http://tawaf.com.sa/tawaf39/etawaf/V_Mut_Groups",
        //                postDataGetGroups, "text/x-gwt-rpc; charset=UTF-8", inputDictionaryGetGroups, getGroupsInput);
        //            if (getGroupResults.ContainsKey("Error"))
        //            {
        //                continue;
        //            }

        //            if (string.IsNullOrEmpty(CodeToGetGroups)) //Coming Here means one code was good
        //            {
        //                LastThirtyTwoDigitDate = DateTime.Now;
        //                CodeToGetGroups = codetotry;
        //                Serialize(this);
        //            }
        //            AvailableGroups= getGroupResults[@",[0-9]{6},"];
        //        }


        //        //Error area - coming here means error
        //        //Coming here means error in getting group codes in this case flush the serialized object
        //        //LastThirtyTwoDigitDate = DateTime.Now.AddYears(-1);
        //        //CodeToGetGroups = string.Empty;
        //        //Serialize(this);

        //       // return "Error:" + "Could not get available groups using any of the codes " + string.Join(",", _allCodesToGetGroups);
        //    }


        //    //<div class="gwt-Label f12 balackUndLine">1</div>
        //}

        private void GetGwtParameters()
        {
            var javaCodesInput = new List<string> {@"java.util.ArrayList/[0-9]{1,}", @"java.lang.String/[0-9]{1,}"};

            var repMofaInput = new List<string>
            {
                @"java.util.ArrayList/[0-9]{1,}",
                @"java.lang.String/[0-9]{1,}",
                @"com.gwt.umra.shared.wrapper.Rep_Mofa_Wrapper/[0-9]{1,}",
                @"com.gwt.umra.shared.wrapper.V_Mut_Groups_Wrapper/[0-9]{1,}",
                @"'9C',[a-zA-Z0-9]{3,}='[a-zA-Z0-9]{9,}',[a-zA-Z0-9]{3,}='[a-zA-Z0-9]{9,}',[a-zA-Z0-9]{3,}='([a-zA-Z0-9]{9,})'",
                @"'External_Agents_Wrapper',([\w\$]{3}='[\w]{10,}',)+"
            };



            JavaUtilCode = Config.javautilArrayList;

            _details.AppendFormat("\njava.util.ArrayList used {0} you can get it from {1}", JavaUtilCode,
                "http://tawaf.com.sa/tawaf39/etawaf/" + ThirtyTwoDigitCode + ".cache.html");
            JavaLangCode = Config.javalangString;
            _details.AppendFormat("\njava.lang.String used {0} you can get it from {1}", JavaLangCode,
                "http://tawaf.com.sa/tawaf39/etawaf/" + ThirtyTwoDigitCode + ".cache.html");

            RepMofaWrapper = Config.Rep_Mofa_Wrapper;
            _details.AppendFormat("\ncom.gwt.umra.shared.wrapper.Rep_Mofa_Wrapperused {0} you can get it from {1}",
                RepMofaWrapper, "http://tawaf.com.sa/tawaf39/etawaf/" + ThirtyTwoDigitCode + ".cache.html");


            GroupWrapper = Config.V_Mut_Groups_Wrapper;

            _details.AppendFormat("\ncom.gwt.umra.shared.wrapper.V_Mut_Groups_Wrapper used {0} you can get it from {1}",
                GroupWrapper, "http://tawaf.com.sa/tawaf39/etawaf/" + ThirtyTwoDigitCode + ".cache.html");

            BoxVer = Config.Rep_Mofa_BoxVer; // Utility.GetIniValue("BoxVer","9D4E443155DFF7C5602A2489AD171150");
            CodeToGetGroups = Config.v_Mut_Groups_CodeToGetGroups;

        }

        public T Serialize<T>(T input)
        {
            if (!Directory.Exists(@"c:\temp\"))
                Directory.CreateDirectory(@"c:\temp\");
            var fileName = @"c:\temp\" + input.GetType() + ".json";


            var serializer = new DataContractJsonSerializer(input.GetType());
            var ms = new MemoryStream();
            serializer.WriteObject(ms, input);
            var json = Encoding.UTF8.GetString(ms.ToArray());
            File.WriteAllText(fileName, json);
            return input;
        }

        public bool Deserialize<T>(ref T inputOutput)
        {
            if (!Directory.Exists(@"c:\temp\"))
                Directory.CreateDirectory(@"c:\temp\");
            var fileName = @"c:\temp\" + inputOutput.GetType() + ".json";
            if (!File.Exists(fileName)) return false;


            var serializer = new DataContractJsonSerializer(inputOutput.GetType());
            var fileContents = File.ReadAllText(fileName);
            try
            {
                using (var stream = new MemoryStream(Encoding.UTF8.GetBytes(fileContents)))
                {
                    inputOutput = (T) serializer.ReadObject(stream);
                }
            }
            catch (Exception)
            {
                return false;
            }


            return true;
        }

        public string GetGroupCodes(string userName, string password)
        {
            //7|0|24|http://tawaf.com.sa/tawaf39/etawaf/|4340A1839A6BC3A73C2A415605982601|com.gwt.umra.client.async.Rep_Mofa_Service|getListData|com.gwt.umra.shared.wrapper.Rep_Mofa_Wrapper/2349924864|java.util.ArrayList/4159755760|java.lang.String/2004016611|Group Code|,|Group Name|Mutamer Code|Mutamer Name|Mofa No|Gender|Date of Birth|Nationality|Passport No|Dependant|Mahram|Serial No|Relation|MOI No|
            //|from  Rep_Mofa where group_no in(1923) order by nvl(nvl(m_parent_code,m_mahram_code),mut_code),m_gender,m_dpn_serial_no |1|2|3|4|1|5|5|0|6|28|7|8|7|9|7|10|-4|7|11|-4|7|12|-4|7|13|-4|7|14|-4|7|15|-4|7|16|-4|7|17|-4|7|18|-4|7|19|-4|7|20|-4|7|21|-4|7|22|7|23|0|0|50|24|0|0|

            _userName = userName;
            GetThirtyTwoDigitCode();
            GetGwtParameters();
            var lastError = string.Empty;
            _allCodesToGetGroups.Add(CodeToGetGroups);
            foreach (var codetotry in _allCodesToGetGroups)
            {
                if (string.IsNullOrEmpty(codetotry)) continue;
                var loginCode = Regex.Match(_userName, @"\d+").ToString();
                var postDataGetGroups = "7|0|6|http://tawaf.com.sa/tawaf39/etawaf/|" + codetotry +
                                        "|com.gwt.umra.client.async.V_Mut_Groups_Service|getTableData|" +
                                        GroupWrapper +
                                        "|from V_Mut_Groups where 1=1 AND grp_status=10 AND uo_branch_code=0 AND ea_code = " +
                                        loginCode + "  AND grp_arch=0|1|2|3|4|1|5|5|0|0|0|0|0|0|500|6|0|0|0|0|0|";

                //6|0|6|http://tawaf.com.sa/tawaf39/etawaf/|FFE9D62A437D7AF609485BAA2E3C6222|com.gwt.umra.client.async.V_Mut_Groups_Service|getTableData|com.gwt.umra.shared.wrapper.V_Mut_Groups_Wrapper/2453305918|from V_Mut_Groups where 1=1 AND grp_status=10 AND uo_code = 226  AND uo_code=226 AND uo_branch_code=0 AND ea_code=21401 AND grp_arch=0|1|2|3|4|1|5|5|0|0|0|0|0|0|10|6|0|0|0|0|
                var groupRegExs = new List<string> { @"4,([0-9]{4,}),4,10" };
                var inputDictionaryGetGroups = new Dictionary<string, string>
                {
                    {"X-GWT-Module-Base", "http://tawaf.com.sa/tawaf39/etawaf/"},
                    {"X-GWT-Permutation", ThirtyTwoDigitCode}
                };
                var getGroupResults = DownloadHtml("http://tawaf.com.sa/tawaf39/etawaf/V_Mut_Groups",
                    postDataGetGroups, "text/x-gwt-rpc; charset=UTF-8", inputDictionaryGetGroups, groupRegExs);
                if (getGroupResults.ContainsKey("Error"))
                {
                    //[0] = {[html, //EX[2,1,["com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533","Too few tokens in RPC request"],0,7]]}
                    continue;
                }

                //var uoNameMatch = Regex.Match(getGroupResults["html"], "Got MOFA\",.*?,\"(.*?)\""); //Update mokhaa association with saudi wakeel
                //if (uoNameMatch.Success)
                //{
                //    var uoName = uoNameMatch.Groups[1].ToString();
                //    _dal.UpdateSaudiWakeelId(CompanyId, "T", uoName);
                //}
                //if (string.IsNullOrEmpty(CodeToGetGroups)) //Coming Here means one code was good
                //{
                //    LastThirtyTwoDigitDate = DateTime.Now;
                //    CodeToGetGroups = codetotry;
                //    Serialize(this);
                //}

                List<string> outputString = new List<string>();

                foreach (var item in groupRegExs)
                {
                    if (getGroupResults.ContainsKey(item))
                        outputString.Add(getGroupResults[item]);
                }
                return string.Join(",", outputString);
            }


            //Error area - coming here means error
            //Coming here means error in getting group codes in this case flush the serialized object
            //LastThirtyTwoDigitDate = DateTime.Now.AddYears(-1);
            //CodeToGetGroups = string.Empty;
            //Serialize(this);

            return "Error:" + "Could not get available groups using any of the codes " +
                   string.Join(",", _allCodesToGetGroups);
        }

        public string GetCsvFile(string groupCodes)
        {
            //7|0|24|http://tawaf.com.sa/tawaf39/etawaf/|9EDD59606C05E3031439EADA3FEE5CBE|com.gwt.umra.client.async.Rep_Mofa_Service|getListData|com.gwt.umra.shared.wrapper.Rep_Mofa_Wrapper/2949375434|java.util.ArrayList/4159755760|java.lang.String/2004016611|Group Code|,|Group Name|Mutamer Code|Mutamer Name|Mofa No|Gender|Date of Birth|Nationality|Passport No|Dependant|Mahram|Serial No|Relation|MOI No|
            //|from  Rep_Mofa where group_no in(1435) order by nvl(nvl(m_parent_code,m_mahram_code),mut_code),m_gender,m_dpn_serial_no |1|2|3|4|1|5|5|0|6|28|7|8|7|9|7|10|-4|7|11|-4|7|12|-4|7|13|-4|7|14|-4|7|15|-4|7|16|-4|7|17|-4|7|18|-4|7|19|-4|7|20|-4|7|21|-4|7|22|7|23|0|0|50|24|0|0|0|
            var getCsVpostData = "7|0|24|http://tawaf.com.sa/tawaf39/etawaf/|" + BoxVer +
                                 "|com.gwt.umra.client.async.Rep_Mofa_Service|getListData|" + RepMofaWrapper +
                                 "|" + JavaUtilCode + "|" + JavaLangCode +
                                 "|Group Code|,|Group Name|Mutamer Code|Mutamer Name|Mofa No|Gender|Date of Birth|Nationality|Passport No|Dependant|Mahram|Serial No|Relation|MOI No|" +
                                 "|from  Rep_Mofa where group_no in(" + groupCodes +
                                 ") order by nvl(nvl(m_parent_code,m_mahram_code),mut_code),m_gender,m_dpn_serial_no |1|2|3|4|1|5|5|0|6|28|7|8|7|9|7|10|-4|7|11|-4|7|12|-4|7|13|-4|7|14|-4|7|15|-4|7|16|-4|7|17|-4|7|18|-4|7|19|-4|7|20|-4|7|21|-4|7|22|7|23|0|0|50|24|0|0|0|";

            var csvInput = new List<string>();
            var csvDictionary = new Dictionary<string, string>
            {
                {"X-GWT-Module-Base", "http://tawaf.com.sa/tawaf39/etawaf/"},
                {"X-GWT-Permutation", ThirtyTwoDigitCode}
            };
            DownloadHtml("http://tawaf.com.sa/tawaf39/etawaf/Rep_Mofa", getCsVpostData,
                "text/x-gwt-rpc; charset=UTF-8", csvDictionary, csvInput);


            var csv = DownloadHtml("http://tawaf.com.sa/tawaf39/etawaf/Excel_RepGrpStat_GotMofa_Servlet",
                csvInput);

            return csv["html"];
        }
    }
}